

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type FilterWithCategoryIdDto {
    categoryId: Int
    id: Int
    name: String
    type: String
    values: [JSON!]!
}

"""
The `Int` scalar type represents non-fractional signed whole numeric values.
"""
scalar Int


type ProductDTO {
    filters: [FilterWithCategoryIdDto!]!
}

type Mutation {
    """
    Get geo products

    Equivalent to POST /v1/product/geo
    """
    getGeoProducts(searchModelInput: SearchModelInput!): SearchResponse

}

type SearchResponse {
    estimatedTotalHits: Int
    facetDistribution: JSON!
    hits: [ProductDTO!]!
}

input SearchModelInput {
    category: String
    filters: [FilterWithCategoryIdDtoInput!]!
    geolocation: GeolocationSearchInput
    meta: RequestParamsMetaDtoInput
    query: String
}

input FilterWithCategoryIdDtoInput {
    categoryId: Int
    id: Int
    name: String
    type: String
    values: [JSON!]!
}

input GeolocationSearchInput {
    lat: Float
    lon: Float
    radius: Float
}

input RequestParamsMetaDtoInput {
    """The maximum number of elements to return in the response."""
    limit: Int

    """The offset of the first element to return in the response."""
    offset: Int

    """The attribute to sort the results by."""
    sort: String
}
